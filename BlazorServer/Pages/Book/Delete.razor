@page "/book/delete/{ISBN}/{Title}/{Pages:int}"
@using BlazorServer.Services
@using BusinessLayer;
@using ServiceLayer;
@using Microsoft.Extensions.Logging;
@inject ILogger<Book> logger;
@inject NavigationManager navigationManager;

<h3>Delete Book</h3>

<EditForm Model="@model" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <label for="title">Title</label>
    <InputText id="title" @bind-Value="model.Title" disabled />

    <br/>
    <button type="submit">Delete</button>

</EditForm>

<div>
    <a href="book/index">Back to List</a>
</div>

@code {

    private Book model = new();
    private GenericManager<Book, string> bookManager = new(ContextHelper.GetBookContext());

    [Parameter]
    public string ISBN { get; set; }

    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public int Pages { get; set; }

    protected override async Task OnInitializedAsync()//this method was redone by me, so I may need to compare it with Mr Iliev's code
    {
        //Сегашният проблем - как да го накарам да работи!?!?!
        model = await bookManager.ReadAsync(ISBN, true);
        //model = new Book(ISBN);
        await base.OnInitializedAsync();
    }

    private async Task HandleValidSubmit()
    {
        try
        {
            string deleteBook = model.ISBN;
            await bookManager.DeleteAsync(deleteBook);
            logger.Log(LogLevel.Information, "Book deleted successfully!");
            navigationManager.NavigateTo("book/index");
        }
        catch (Exception ex)
        {
            logger.Log(LogLevel.Error, ex.Message);
        }
    }
}
