@page "/myreadingcard/details"
@using BusinessLayer
@using ServiceLayer
@inject _UserManager _userManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<h3>My Reading Card Details</h3>

    @if (model != null)
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Reading Card Id</th>
                    <th>Username</th>
                    <th>Books</th>
                    <th>Number Of Books</th>
                    <th>Number Of Overwrites</th>
                    <th>Date Created</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>@model.ReadingCardId</td>
                    <td>@model.User.UserName</td>
                    <td>
                        @if (model.Books.Count > 0)
                        {
                            <ul>
                                @foreach (var book in model.Books)
                                {
                                    <li>@book.Title</li>
                                }
                            </ul>
                        }
                        else
                        {
                            <div>
                                No books were borrowed!
                            </div>
                        }
                    </td>
                    <td>@model.BorrowedBooks</td>
                    <td>@model.NumberOfOverwrites</td>
                    <td>@model.DateCreated</td>
                </tr>
            </tbody>
        </table>
    }
    else
    {
        <p>Loading...</p>
    }

    <div>
        <a href="book/index">Go to Books</a>
    </div>

    @code {
        private ReadingCard model;

        protected override async Task OnInitializedAsync()
        {
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            var user = authState.User;

            if (user.Identity.IsAuthenticated)
            {
                var userName = user.Identity.Name;
                var currentUser = await _userManager.FindUserByNameAsync(userName, true);

                if (currentUser != null)
                {
                    model = currentUser.ReadingCard;//ЗАЩО READING CARD E NULL?!?!?!?!??!?!?
                }
            }
        }
    }
